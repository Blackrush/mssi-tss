let id = lambda x. x ;;

let not = lambda b. if b then false else true ;;
let and = lambda l. lambda r. if l then r else false ;;
let or  = lambda l. lambda r. if l then true else r ;;
let xor = lambda l. lambda r. if l then (not r) else r ;;

let nil = lambda c. lambda n. n ;;
let cons = lambda h. lambda t. lambda c. lambda n. c h (t c n) ;;
let head = lambda l. l (lambda h. lambda t. h) false ;;
let tail = lambda l. l (lambda h. lambda l. l) nil ;;
let isnil = lambda l. l (lambda h. lambda l. false) true ;;
let len = lambda l. l (lambda h. lambda l. succ l) 0 ;;

let tru = lambda t. lambda f. t ;;
let fls = lambda t. lambda f. f ;;

